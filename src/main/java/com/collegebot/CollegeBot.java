package com.collegebot;
import java.util.Arrays;
import java.util.List;
import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.send.SendAnimation;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.methods.send.SendPhoto;
import org.telegram.telegrambots.meta.api.methods.send.SendSticker;
import org.telegram.telegrambots.meta.api.methods.send.SendVideo;
import org.telegram.telegrambots.meta.api.objects.InputFile;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.PhotoSize;
import org.telegram.telegrambots.meta.api.objects.Video;
import org.telegram.telegrambots.meta.api.objects.stickers.Sticker;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.atomic.AtomicInteger;

public class CollegeBot extends TelegramLongPollingBot {
    
    private final Map<Integer, String> textMessagesStorage = new HashMap<>();
    private final Map<Integer, MediaMessage> mediaMessagesStorage = new HashMap<>();
    private final AtomicInteger messageCounter = new AtomicInteger(1);
    
    private static final String CHANNEL_ID = "@KRD_TEC_LUV";
    private static final List<Long> ADMIN_ID = Arrays.asList(
    7709348924L, // —Ç–≤–æ–π ID
    8097728191L // –≤—Ç–æ—Ä–æ–π –∞–¥–º–∏–Ω
    );
    
    String channelID = "@KRD\\_TEC\\_LUV";

    private static class MediaMessage {
        String fileId;
        String caption;
        String type; // "photo", "video", "video_note", "sticker", "animation"
        
        MediaMessage(String fileId, String caption, String type) {
            this.fileId = fileId;
            this.caption = caption;
            this.type = type;
        }
    }
    
    @Override
    public String getBotUsername() {
        return "KRDTEC_BOT";
    }
    
    @Override
    public String getBotToken() {
        return "8495675368:AAHfXb9ShfAuKk8EZL1YGSV7G4tJVS1rexw";
    }
    
    @Override
    public void onUpdateReceived(Update update) {
        if (update.hasMessage()) {
            Message message = update.getMessage();
            Long chatId = message.getChatId();
            Long userId = message.getFrom().getId();
            
            if (message.hasText()) {
                String text = message.getText();
                
                if (text.equals("/start")) {
                    sendWelcomeMessage(chatId.toString());
                    return;
                }
                
                if (text.equals("/help")) {
                    sendHelpMessage(chatId.toString());
                    return;
                }
                
                if (text.startsWith("/post") && userId.equals(ADMIN_ID)) {
                    handlePostCommand(chatId.toString(), text);
                    return;
                }
                
                if (text.equals("/list") && userId.equals(ADMIN_ID)) {
                    handleListCommand(chatId.toString());
                    return;
                }
                
                handleTextMessage(chatId.toString(), text, userId);
            }
            else if (message.hasPhoto()) {
                handlePhotoMessage(chatId.toString(), message, userId);
            }
            else if (message.hasVideo()) {
                handleVideoMessage(chatId.toString(), message, userId);
            }
            else if (message.hasVideoNote()) {
                handleVideoNoteMessage(chatId.toString(), message, userId);
            }
            else if (message.hasSticker()) {
                handleStickerMessage(chatId.toString(), message, userId);
            }
            else if (message.hasAnimation()) {
                handleAnimationMessage(chatId.toString(), message, userId);
            }
        }
    }
    
    private void handleTextMessage(String chatId, String text, Long userId) {
        int messageId = messageCounter.getAndIncrement();
        textMessagesStorage.put(messageId, text);
        
        String userResponse = "‚úÖ –í–∞—à–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ #" + messageId + " –ø—Ä–∏–Ω—è—Ç–æ!\n\n" +
                            "üìù –¢–µ–∫—Å—Ç: " + (text.length() > 100 ? text.substring(0, 100) + "..." : text) + "\n\n" +
                            "‚è≥ –û–∂–∏–¥–∞–π—Ç–µ –º–æ–¥–µ—Ä–∞—Ü–∏–∏!";
        sendTextMessage(chatId, userResponse);
        
        String adminMessage = "üì® **–ù–æ–≤–æ–µ –¢–ï–ö–°–¢–û–í–û–ï —Å–æ–æ–±—â–µ–Ω–∏–µ**\n\n" +
                             "üÜî ID: #" + messageId + " (–¢–ï–ö–°–¢)\n" +
                             "üë§ –û—Ç: " + userId + "\n\n" +
                             "üìù –¢–µ–∫—Å—Ç:\n" + text + "\n\n" +
                             "üì§ –î–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: /post " + messageId;
        sendTextMessage(ADMIN_ID.toString(), adminMessage);
    }
    
    private void handlePhotoMessage(String chatId, Message message, Long userId) {
        List<PhotoSize> photos = message.getPhoto();
        PhotoSize largestPhoto = photos.get(photos.size() - 1);
        String fileId = largestPhoto.getFileId();
        String caption = message.getCaption();
        
        int messageId = messageCounter.getAndIncrement();
        mediaMessagesStorage.put(messageId, new MediaMessage(fileId, caption, "photo"));
        
        String userResponse = "‚úÖ –í–∞—à–µ —Ñ–æ—Ç–æ #" + messageId + " –ø—Ä–∏–Ω—è—Ç–æ!\n\n" +
                            (caption != null ? "üìù –ü–æ–¥–ø–∏—Å—å: " + caption + "\n\n" : "") +
                            "‚è≥ –û–∂–∏–¥–∞–π—Ç–µ –º–æ–¥–µ—Ä–∞—Ü–∏–∏!";
        sendTextMessage(chatId, userResponse);
        
        String adminMessage = "üñº **–ù–æ–≤–æ–µ –§–û–¢–û —Å–æ–æ–±—â–µ–Ω–∏–µ**\n\n" +
                             "üÜî ID: #" + messageId + " (–§–û–¢–û)\n" +
                             "üë§ –û—Ç: " + userId + "\n\n" +
                             (caption != null ? "üìù –ü–æ–¥–ø–∏—Å—å: " + caption + "\n\n" : "üìù –ë–µ–∑ –ø–æ–¥–ø–∏—Å–∏\n\n") +
                             "üì§ –î–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: /post " + messageId;
        sendTextMessage(ADMIN_ID.toString(), adminMessage);
    }
    
    private void handleVideoMessage(String chatId, Message message, Long userId) {
        Video video = message.getVideo();
        String fileId = video.getFileId();
        String caption = message.getCaption();
        
        int messageId = messageCounter.getAndIncrement();
        mediaMessagesStorage.put(messageId, new MediaMessage(fileId, caption, "video"));
        
        String userResponse = "‚úÖ –í–∞—à–µ –≤–∏–¥–µ–æ #" + messageId + " –ø—Ä–∏–Ω—è—Ç–æ!\n\n" +
                            (caption != null ? "üìù –ü–æ–¥–ø–∏—Å—å: " + caption + "\n\n" : "") +
                            "‚è≥ –û–∂–∏–¥–∞–π—Ç–µ –º–æ–¥–µ—Ä–∞—Ü–∏–∏!";
        sendTextMessage(chatId, userResponse);
        
        String adminMessage = "üé• **–ù–æ–≤–æ–µ –í–ò–î–ï–û —Å–æ–æ–±—â–µ–Ω–∏–µ**\n\n" +
                             "üÜî ID: #" + messageId + " (–í–ò–î–ï–û)\n" +
                             "üë§ –û—Ç: " + userId + "\n\n" +
                             (caption != null ? "üìù –ü–æ–¥–ø–∏—Å—å: " + caption + "\n\n" : "üìù –ë–µ–∑ –ø–æ–¥–ø–∏—Å–∏\n\n") +
                             "üì§ –î–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: /post " + messageId;
        sendTextMessage(ADMIN_ID.toString(), adminMessage);
    }
    
    private void handleVideoNoteMessage(String chatId, Message message, Long userId) {
        String fileId = message.getVideoNote().getFileId();
        
        int messageId = messageCounter.getAndIncrement();
        mediaMessagesStorage.put(messageId, new MediaMessage(fileId, null, "video_note"));
        
        String userResponse = "‚úÖ –í–∞—à –≤–∏–¥–µ–æ-–∫—Ä—É–∂–æ–∫ #" + messageId + " –ø—Ä–∏–Ω—è—Ç!\n\n" +
                            "‚è≥ –û–∂–∏–¥–∞–π—Ç–µ –º–æ–¥–µ—Ä–∞—Ü–∏–∏!";
        sendTextMessage(chatId, userResponse);
        
        String adminMessage = "üé¨ **–ù–æ–≤—ã–π –í–ò–î–ï–û-–ö–†–£–ñ–û–ö**\n\n" +
                             "üÜî ID: #" + messageId + " (–í–ò–î–ï–û-–ö–†–£–ñ–û–ö)\n" +
                             "üë§ –û—Ç: " + userId + "\n\n" +
                             "üì§ –î–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: /post " + messageId;
        sendTextMessage(ADMIN_ID.toString(), adminMessage);
    }
    
    private void handleStickerMessage(String chatId, Message message, Long userId) {
        Sticker sticker = message.getSticker();
        String fileId = sticker.getFileId();
        String emoji = sticker.getEmoji() != null ? sticker.getEmoji() : "‚ùì";
        
        int messageId = messageCounter.getAndIncrement();
        mediaMessagesStorage.put(messageId, new MediaMessage(fileId, emoji, "sticker"));
        
        String userResponse = "‚úÖ –í–∞—à —Å—Ç–∏–∫–µ—Ä #" + messageId + " –ø—Ä–∏–Ω—è—Ç!\n\n" +
                            "üòä –≠–º–æ–¥–∑–∏: " + emoji + "\n\n" +
                            "‚è≥ –û–∂–∏–¥–∞–π—Ç–µ –º–æ–¥–µ—Ä–∞—Ü–∏–∏!";
        sendTextMessage(chatId, userResponse);
        
        String adminMessage = "ü©∑ **–ù–æ–≤—ã–π –°–¢–ò–ö–ï–†**\n\n" +
                             "üÜî ID: #" + messageId + " (–°–¢–ò–ö–ï–†)\n" +
                             "üë§ –û—Ç: " + userId + "\n\n" +
                             "üòä –≠–º–æ–¥–∑–∏: " + emoji + "\n\n" +
                             "üì§ –î–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: /post " + messageId;
        sendTextMessage(ADMIN_ID.toString(), adminMessage);
    }
    
    private void handleAnimationMessage(String chatId, Message message, Long userId) {
        String fileId = message.getAnimation().getFileId();
        String caption = message.getCaption();
        
        int messageId = messageCounter.getAndIncrement();
        mediaMessagesStorage.put(messageId, new MediaMessage(fileId, caption, "animation"));
        
        String userResponse = "‚úÖ –í–∞—à GIF #" + messageId + " –ø—Ä–∏–Ω—è—Ç!\n\n" +
                            (caption != null ? "üìù –ü–æ–¥–ø–∏—Å—å: " + caption + "\n\n" : "") +
                            "‚è≥ –û–∂–∏–¥–∞–π—Ç–µ –º–æ–¥–µ—Ä–∞—Ü–∏–∏!";
        sendTextMessage(chatId, userResponse);
        
        String adminMessage = "üé≠ **–ù–æ–≤—ã–π GIF**\n\n" +
                             "üÜî ID: #" + messageId + " (GIF)\n" +
                             "üë§ –û—Ç: " + userId + "\n\n" +
                             (caption != null ? "üìù –ü–æ–¥–ø–∏—Å—å: " + caption + "\n\n" : "üìù –ë–µ–∑ –ø–æ–¥–ø–∏—Å–∏\n\n") +
                             "üì§ –î–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: /post " + messageId;
        sendTextMessage(ADMIN_ID.toString(), adminMessage);
    }
    
    private void handlePostCommand(String chatId, String text) {
        try {
            String[] parts = text.split(" ");
            if (parts.length < 2) {
                sendTextMessage(chatId, "‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /post <id_—Å–æ–æ–±—â–µ–Ω–∏—è>\n–ü—Ä–∏–º–µ—Ä: /post 1");
                return;
            }
            
            int messageId = Integer.parseInt(parts[1]);
            
            if (textMessagesStorage.containsKey(messageId)) {
                String messageText = textMessagesStorage.get(messageId);
                publishTextToChannel(messageText);
                textMessagesStorage.remove(messageId);
                sendTextMessage(chatId, "‚úÖ –¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ #" + messageId + " –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ!");
            }
            else if (mediaMessagesStorage.containsKey(messageId)) {
                MediaMessage mediaMessage = mediaMessagesStorage.get(messageId);
                
                switch (mediaMessage.type) {
                    case "photo":
                        publishPhotoToChannel(mediaMessage.fileId, mediaMessage.caption);
                        sendTextMessage(chatId, "‚úÖ –§–æ—Ç–æ #" + messageId + " –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ!");
                        break;
                    case "video":
                        publishVideoToChannel(mediaMessage.fileId, mediaMessage.caption);
                        sendTextMessage(chatId, "‚úÖ –í–∏–¥–µ–æ #" + messageId + " –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ!");
                        break;
                    case "video_note":
                        publishVideoNoteToChannel(mediaMessage.fileId);
                        sendTextMessage(chatId, "‚úÖ –í–∏–¥–µ–æ-–∫—Ä—É–∂–æ–∫ #" + messageId + " –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!");
                        break;
                    case "sticker":
                        publishStickerToChannel(mediaMessage.fileId);
                        sendTextMessage(chatId, "‚úÖ –°—Ç–∏–∫–µ—Ä #" + messageId + " –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!");
                        break;
                    case "animation":
                        publishAnimationToChannel(mediaMessage.fileId, mediaMessage.caption);
                        sendTextMessage(chatId, "‚úÖ GIF #" + messageId + " –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!");
                        break;
                }
                mediaMessagesStorage.remove(messageId);
            }
            else {
                sendTextMessage(chatId, "‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ —Å ID " + messageId + " –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.");
            }
            
        } catch (NumberFormatException e) {
            sendTextMessage(chatId, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —á–∏—Å–ª–æ.");
        } catch (TelegramApiException e) {
            sendTextMessage(chatId, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: " + e.getMessage());
            e.printStackTrace();
        }
    }
    
    private void publishTextToChannel(String text) throws TelegramApiException {
        SendMessage message = new SendMessage();
        message.setChatId(CHANNEL_ID);
        message.setText(text);
        execute(message);
    }
    
    private void publishPhotoToChannel(String fileId, String caption) throws TelegramApiException {
        SendPhoto photo = new SendPhoto();
        photo.setChatId(CHANNEL_ID);
        photo.setPhoto(new InputFile(fileId));
        
        String finalCaption =
                            (caption != null ?  caption : "") 
                            ;
        photo.setCaption(finalCaption);
        
        execute(photo);
    }
    
    private void publishVideoToChannel(String fileId, String caption) throws TelegramApiException {
        SendVideo video = new SendVideo();
        video.setChatId(CHANNEL_ID);
        video.setVideo(new InputFile(fileId));
        
        String finalCaption = 
                            (caption != null ? ":\n\n" + caption : "");
        video.setCaption(finalCaption);
        
        execute(video);
    }
    
    private void publishStickerToChannel(String fileId) throws TelegramApiException {
        SendSticker sticker = new SendSticker();
        sticker.setChatId(CHANNEL_ID);
        sticker.setSticker(new InputFile(fileId));
        
        execute(sticker);
    }
    
    private void publishAnimationToChannel(String fileId, String caption) throws TelegramApiException {
        SendAnimation animation = new SendAnimation();
        animation.setChatId(CHANNEL_ID);
        animation.setAnimation(new InputFile(fileId));
        
        String finalCaption = 
                            (caption != null ? ":\n\n" + caption : "")
                            ;
        animation.setCaption(finalCaption);
        
        execute(animation);
    }
    
    private void publishVideoNoteToChannel(String fileId) throws TelegramApiException {
        SendMessage message = new SendMessage();
        message.setChatId(CHANNEL_ID);
        message.setText("üé¨ –ê–Ω–æ–Ω–∏–º–Ω—ã–π –≤–∏–¥–µ–æ-–∫—Ä—É–∂–æ–∫\n\n" +
                       "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∏–¥–µ–æ-–∫—Ä—É–∂–∫–∏ –Ω–µ–ª—å–∑—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –∫–∞–Ω–∞–ª.\n" +
                       "–ù–æ –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –æ–±—ã—á–Ω–æ–µ –≤–∏–¥–µ–æ –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–≥–æ!\n\n" +
                       "#–≤–∏–¥–µ–æ–∫—Ä—É–∂–æ–∫ #–Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è");
        execute(message);
    }
    
    private void handleListCommand(String chatId) {
        StringBuilder list = new StringBuilder("üìã –°–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏:\n\n");
        
        for (Map.Entry<Integer, String> entry : textMessagesStorage.entrySet()) {
            String preview = entry.getValue().length() > 50 ? 
                entry.getValue().substring(0, 50) + "..." : entry.getValue();
            list.append("üìù #").append(entry.getKey()).append(" (–¢–ï–ö–°–¢): ").append(preview).append("\n\n");
        }
        
        for (Map.Entry<Integer, MediaMessage> entry : mediaMessagesStorage.entrySet()) {
            MediaMessage media = entry.getValue();
            String typeEmoji = "";
            String typeName = "";
            
            switch (media.type) {
                case "photo":
                    typeEmoji = "üñº";
                    typeName = "–§–û–¢–û";
                    break;
                case "video":
                    typeEmoji = "üé•";
                    typeName = "–í–ò–î–ï–û";
                    break;
                case "video_note":
                    typeEmoji = "üé¨";
                    typeName = "–í–ò–î–ï–û-–ö–†–£–ñ–û–ö";
                    break;
                case "sticker":
                    typeEmoji = "ü©∑";
                    typeName = "–°–¢–ò–ö–ï–†";
                    break;
                case "animation":
                    typeEmoji = "üé≠";
                    typeName = "GIF";
                    break;
            }
            
            String captionPreview = media.caption != null && media.caption.length() > 30 ? 
                media.caption.substring(0, 30) + "..." : 
                (media.caption != null ? media.caption : "–±–µ–∑ –ø–æ–¥–ø–∏—Å–∏");
            
            list.append(typeEmoji).append(" #").append(entry.getKey())
                .append(" (").append(typeName).append("): ").append(captionPreview).append("\n\n");
        }
        
        if (textMessagesStorage.isEmpty() && mediaMessagesStorage.isEmpty()) {
            sendTextMessage(chatId, "üì≠ –ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏.");
        } else {
            sendTextMessage(chatId, list.toString());
        }
    }
    
    private void sendWelcomeMessage(String chatId) {
        String welcomeText = "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª "+ channelID + "!\n\n" +
                "üì® –ü—Ä–∏—Å—ã–ª–∞–π —Å—é–¥–∞:\n" +
                "‚Ä¢ üìù –¢–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n" +
                "‚Ä¢ üñº –§–æ—Ç–æ (—Å –ø–æ–¥–ø–∏—Å—è–º–∏ –∏–ª–∏ –±–µ–∑)\n" +
                "‚Ä¢ üé• –í–∏–¥–µ–æ (—Å –ø–æ–¥–ø–∏—Å—è–º–∏ –∏–ª–∏ –±–µ–∑)\n" +
                "‚Ä¢ ü©∑ –°—Ç–∏–∫–µ—Ä—ã\n" +
                "‚Ä¢ üé≠ GIF-–∞–Ω–∏–º–∞—Ü–∏–∏\n" +
                "‚Ä¢ üíå –ü—Ä–∏–∑–Ω–∞–Ω–∏—è, —à—É—Ç–∫–∏, –º–µ–º—ã\n\n" +
                "‚ö†Ô∏è –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—É–±–ª–∏–∫—É—é—Ç—Å—è –ø–æ—Å–ª–µ –º–æ–¥–µ—Ä–∞—Ü–∏–∏.\n\n" +
                "‚ö†Ô∏è *! –ê–î–ú–ò–ù–´ –ö–ê–ù–ê–õ–ê –ù–ï –ù–ï–°–£–¢ –û–¢–í–ï–¢–°–í–ï–ù–ù–û–°–¢–ò –ó–ê –û–¢–ü–†–ê–í–õ–ï–ù–ù–´–ô –ë–û–¢–û–ú –ö–û–ù–¢–ï–ù–¢ !*\n\n" +
                "–ò—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏";
        
        sendTextMessage(chatId, welcomeText);
    }
    
    private void sendHelpMessage(String chatId) {
        String helpText = "‚ÑπÔ∏è *–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:*\n\n" +
                "‚úçÔ∏è –ü—Ä–æ—Å—Ç–æ –ø—Ä–∏—à–ª–∏ —Å—é–¥–∞:\n" +
                "‚Ä¢ –õ—é–±–æ–π —Ç–µ–∫—Å—Ç\n" +
                "‚Ä¢ –§–æ—Ç–æ –∏–ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫—É\n" +
                "‚Ä¢ –í–∏–¥–µ–æ —Ñ–∞–π–ª\n" +
                "‚Ä¢ –°—Ç–∏–∫–µ—Ä\n" +
                "‚Ä¢ GIF\n" +
                "‚Ä¢ –ú–µ–¥–∏–∞ —Å –ø–æ–¥–ø–∏—Å—å—é\n\n" +
                "üîí –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è *–∞–Ω–æ–Ω–∏–º–Ω—ã*!\n\n" +
                "‚è± –ï—Å–ª–∏ —Ç–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 5 —á–∞—Å–æ–≤, —Å—á–∏—Ç–∞–π, —á—Ç–æ –æ–Ω–æ –Ω–µ –ø—Ä–æ—à–ª–æ –º–æ–¥–µ—Ä–∞—Ü–∏—é\n\n" +
                "‚ÑπÔ∏è *–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:* –í–∏–¥–µ–æ-–∫—Ä—É–∂–∫–∏ –Ω–µ–ª—å–∑—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –∫–∞–Ω–∞–ª.";
        
        sendTextMessage(chatId, helpText);
    }
    
    private void sendTextMessage(String chatId, String text) {
        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        message.setText(text);
        message.setParseMode("Markdown");
        
        try {
            execute(message);
        } catch (TelegramApiException e) {
            System.err.println("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç " + chatId + ": " + e.getMessage());
        }
    }
}
